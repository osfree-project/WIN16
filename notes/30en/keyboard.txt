Open Watcom Executable Image Dump Utility Version 1.9
Portions Copyright (c) 1984-2002 Sybase, Inc. All Rights Reserved.
Source code is available under the Sybase Open Watcom Public License.
See http://www.openwatcom.org/ for details.

                                DOS EXE Header                                
==============================================================================
length of load module mod 200H                       =     00D4H
number of 200H pages in load module                  =     000EH
number of relocation items                           =     0000H
size of header in paragraphs                         =     0004H
minimum number of paragraphs required above load mod =     0000H
maximum number of paragraphs required above load mod =     FFFFH
offset of stack segment in load module               =     0000H
initial value of SP                                  =     00B8H
checksum                                             =     0000H
initial value of IP                                  =     0000H
offset of code segment within load module (segment)  =     0000H
file offset of first relocation item                 =     0040H
overlay number                                       =     0000H
load module length                                   = 00001AD4H

                       New EXE Header (OS/2 or Windows)                       
==============================================================================
file offset = 00000080H

link version                                         =     0105H
offset of entry table                                =     00B4H
length of entry table                                =     006AH
32-bit chksum                                        = AFA813EFH
module flag                                          =     8301H
segment number of auto data segment                  =     000BH
initial size of local heap added to auto data seg    =     0000H
initial size of stack to be added to auto data seg   =     0000H
initial value of IP on entry                         =     0053H
initial segment number for setting CS on entry       =     0001H
initial value of SP on entry                         =     0000H
segment number for setting SS on entry               =     0000H
number of entries in segment table                   =     000BH
number of entries in module reference table          =     0001H
number of bytes in nonresident names table           =     0126H
offset of beg of segment table (rel NH)              =     0040H
offset of beg of resource table                      =     0098H
offset of beg of resident names table                =     0098H
offset of beg of module reference table              =     00AAH
offset of beg of imported names table                =     00ACH
offset of nonresident names table (rel file)         = 0000019EH
number of movable entry points listed in entry table =     0008H
alignment shift count (0 => 9)                       =     0004H
number of resource segments (OS/2 only)              =     0000H
target OS (1==OS/2, 2==Windows, 3==DOS4, 4==Win386)  =       02H
other flags                                          =       08H
offset of gangload area  (Windows only)              =     002EH
length of gangload area  (Windows only)              =     0114H
swap area                (Windows only)              =     0000H
expected Windows version (Windows only)              =     0300H
Module Flag Word = LIBRARY | WINDOWAPI | SINGLEDATA

                                Segment Table                                 
==============================================================================
seg  fileoff  len  alloc prior priv flag
==== ======== ==== ====  ====  ==== ====
0001 00000300 008A 008A  0001  0007 1D50
  CODE|MOVABLE|NOSHARE|PRELOAD|EXECREAD|RELOCS|DISCARDABLE
0002 00001420 00A2 00A2  0001  0007 1C10
  CODE|MOVABLE|NOSHARE|LOADONCALL|EXECREAD|DISCARDABLE
0003 000003C0 0232 0232  0001  0007 1D50
  CODE|MOVABLE|NOSHARE|PRELOAD|EXECREAD|RELOCS|DISCARDABLE
0004 000014D0 00C2 00C3  0001  0007 1D10
  CODE|MOVABLE|NOSHARE|LOADONCALL|EXECREAD|RELOCS|DISCARDABLE
0005 000015B0 009D 009E  0001  0007 1D10
  CODE|MOVABLE|NOSHARE|LOADONCALL|EXECREAD|RELOCS|DISCARDABLE
0006 00000640 00A3 00A3  0001  0007 1C50
  CODE|MOVABLE|NOSHARE|PRELOAD|EXECREAD|DISCARDABLE
0007 00001660 0037 0038  0001  0007 1C10
  CODE|MOVABLE|NOSHARE|LOADONCALL|EXECREAD|DISCARDABLE
0008 000016A0 00C3 00C4  0001  0007 1D10
  CODE|MOVABLE|NOSHARE|LOADONCALL|EXECREAD|RELOCS|DISCARDABLE
0009 00001770 03FF 0400  0001  0007 1D10
  CODE|MOVABLE|NOSHARE|LOADONCALL|EXECREAD|RELOCS|DISCARDABLE
000A 00000700 0B4D 0B4D  0000  0003 0D40
  CODE|FIXED|NOSHARE|PRELOAD|EXECREAD|RELOCS
000B 000012C0 0140 0140  0000  0003 0C61
  DATA|FIXED|SHARE|PRELOAD|READWRITE

                             Resident Names Table                             
==============================================================================
KEYBOARD unknown ordinal 0000
WEP.8 seg 000A off 0B4A parm 0000 EXPORTED|SHAREDATA

                            Module Reference Table                            
==============================================================================
KERNEL

                              Entry Point Table                               
==============================================================================
.136 seg 000A off 09A5 parm 0000 EXPORTED|SHAREDATA
.135 seg 000A off 094C parm 0000 EXPORTED|SHAREDATA
.134 seg 000A off 0918 parm 0000 EXPORTED|SHAREDATA
.133 seg 0009 off 02EB parm 0000 EXPORTED|SHAREDATA
.132 seg 000A off 0844 parm 0000 EXPORTED|SHAREDATA
.131 seg 0008 off 0000 parm 0000 EXPORTED|SHAREDATA
.130 seg 0007 off 0000 parm 0000 EXPORTED|SHAREDATA
.129 seg 0005 off 0007 parm 0000 EXPORTED|SHAREDATA
.128 seg 0004 off 0000 parm 0000 EXPORTED|SHAREDATA
.127 seg 0003 off 00CD parm 0000 EXPORTED|SHAREDATA
.126 seg 0002 off 0088 parm 0000 EXPORTED|SHAREDATA
.100 seg 000A off 098A parm 0000 EXPORTED|SHAREDATA
.8 seg 000A off 0B4A parm 0000 EXPORTED|SHAREDATA
.7 seg 0006 off 0020 parm 0000 EXPORTED|SHAREDATA
.6 seg 000A off 0899 parm 0000 EXPORTED|SHAREDATA
.5 seg 000A off 0849 parm 0000 EXPORTED|SHAREDATA
.4 seg 000A off 0470 parm 0000 EXPORTED|SHAREDATA
.3 seg 000A off 0B03 parm 0000 EXPORTED|SHAREDATA
.2 seg 000A off 0A08 parm 0000 EXPORTED|SHAREDATA
.1 seg 000A off 09E4 parm 0000 EXPORTED|SHAREDATA

                           Nonresident Names Table                            
==============================================================================
KEYBOARD (Enhanced keyboard): unknown ordinal 0000
DISABLE.3 seg 000A off 0B03 parm 0000 EXPORTED|SHAREDATA
GETKEYNAMETEXT.133 seg 0009 off 02EB parm 0000 EXPORTED|SHAREDATA
MAPVIRTUALKEY.131 seg 0008 off 0000 parm 0000 EXPORTED|SHAREDATA
GETTABLESEG.126 seg 0002 off 0088 parm 0000 EXPORTED|SHAREDATA
ANSITOOEMBUFF.134 seg 000A off 0918 parm 0000 EXPORTED|SHAREDATA
INQUIRE.1 seg 000A off 09E4 parm 0000 EXPORTED|SHAREDATA
ENABLE.2 seg 000A off 0A08 parm 0000 EXPORTED|SHAREDATA
GETKBCODEPAGE.132 seg 000A off 0844 parm 0000 EXPORTED|SHAREDATA
OEMTOANSI.6 seg 000A off 0899 parm 0000 EXPORTED|SHAREDATA
VKKEYSCAN.129 seg 0005 off 0007 parm 0000 EXPORTED|SHAREDATA
OEMKEYSCAN.128 seg 0004 off 0000 parm 0000 EXPORTED|SHAREDATA
ENABLEKBSYSREQ.136 seg 000A off 09A5 parm 0000 EXPORTED|SHAREDATA
SCREENSWITCHENABLE.100 seg 000A off 098A parm 0000 EXPORTED|SHAREDATA
SETSPEED.7 seg 0006 off 0020 parm 0000 EXPORTED|SHAREDATA
GETKEYBOARDTYPE.130 seg 0007 off 0000 parm 0000 EXPORTED|SHAREDATA
NEWTABLE.127 seg 0003 off 00CD parm 0000 EXPORTED|SHAREDATA
OEMTOANSIBUFF.135 seg 000A off 094C parm 0000 EXPORTED|SHAREDATA
TOASCII.4 seg 000A off 0470 parm 0000 EXPORTED|SHAREDATA
ANSITOOEM.5 seg 000A off 0849 parm 0000 EXPORTED|SHAREDATA
